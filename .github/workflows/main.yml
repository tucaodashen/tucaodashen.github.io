name: Deploy to GitHub Pages

# 控制工作流何时运行
on:
  # 在推送到 main 分支时触发
  push:
    branches: [ main ] # 将 'main' 替换为你的主要开发分支，如 'master'
  # 允许你手动从 Actions 选项卡运行此工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，允许部署到 GitHub Pages
permissions:
  contents: read # 需要读取仓库内容
  pages: write    # 需要写入 GitHub Pages
  id-token: write # OIDC token 需要用于 GitHub Pages 的新部署方式

# 允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # 构建和部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # 设置部署环境的 URL
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 运行器
    steps:
      # 步骤 1: 检出你的仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4
        # 重要：先不拉取 LFS 文件，因为我们还没安装 LFS 客户端
        with:
          lfs: false

      # 步骤 2: 安装 Git LFS 客户端
      # Ubuntu 运行器通常不自带 LFS，需要安装
      - name: Install Git LFS
        run: |
          sudo apt-get update
          sudo apt-get install git-lfs -y # 使用 -y 自动确认安装
          git lfs install # 初始化 LFS

      # 步骤 3: 拉取实际的 LFS 文件
      # 现在 LFS 客户端已安装，可以拉取文件了
      # 它会根据 .gitattributes 和检出的指针文件下载实际内容
      - name: Pull LFS files
        run: git lfs pull

      # --- 可选：构建步骤 ---
      # 如果你的项目需要构建（例如使用 npm, yarn, webpack 等）
      # 在这里添加你的构建命令
      # 例如:
      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '18' # 指定你的 Node.js 版本
      #     cache: 'npm' # 缓存 npm 依赖
      # - name: Install dependencies
      #   run: npm install
      # - name: Build project
      #   run: npm run build # 假设你的构建命令是 npm run build
      # ------------------------

      # 步骤 4: 配置 GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 步骤 5: 上传构建产物 (Artifact)
      # 将需要部署的文件打包成 GitHub Pages 可用的产物
      # 如果你有构建步骤，且产物在特定目录（如 'build', 'dist', 'public'），
      # 请修改下面的 'path' 参数。
      # 如果你的文件就在仓库根目录，'path' 设为 '.'
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 指定要上传的目录。
          # 如果构建产物在 ./build/ 目录下，就用 './build'
          # 如果文件就在根目录，用 '.'
          path: '.' # <--- !! 修改这里，如果你的文件不在根目录 !!

      # 步骤 6: 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # 使用官方的部署 Action
